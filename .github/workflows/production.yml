name: Production Deploy

on:
  push:
    branches:
      - dockerize-local
      - main

jobs:
  deploy:
    name: Build Image
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx      
      uses: crazy-max/ghaction-docker-buildx@v1      
      with:        
        version: latest    

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - uses: deptno/action-aws-ssm-to-dotenv@v1.3.1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2
      with:
        ssm-path: /ZENNBOT/PRODUCTION
        output: .env
        decryption: true

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Image
      run: docker buildx build --platform linux/arm64/v8 -t zennbot-web .

    - name: Tag Image
      run: docker tag zennbot-web:latest 998737244507.dkr.ecr.ap-northeast-2.amazonaws.com/zennbot-web:latest

    - name: Push Image to ECR
      run: docker push 998737244507.dkr.ecr.ap-northeast-2.amazonaws.com/zennbot-web:latest
  
  coverage:
    name: Calculate Coverage
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependancy
      run: yarn

    - name: Run test and make coverage
      run: yarn test:cov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage/coverage-final.json