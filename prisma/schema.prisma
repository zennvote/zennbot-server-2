generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Attendance {
  id            Int      @id @default(autoincrement())
  twitchId      String   @db.VarChar
  attendedAt    DateTime @db.Timestamp(6)
  broadcastedAt String   @db.VarChar
  tier          Int

  @@unique([twitchId, attendedAt], map: "IDX_88afafaccbb967eda0db4d9bd4")
  @@index([broadcastedAt])
  @@map("attendance")
}

model Manager {
  id       Int    @id @default(autoincrement())
  twitchId String @unique @db.VarChar

  @@map("manager")
}

model Setting {
  key       String   @id @db.VarChar
  type      String   @db.VarChar
  flagValue Boolean?

  @@map("setting")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar
  password String @db.VarChar

  @@map("user")
}

model Viewer {
  id        Int        @id @default(autoincrement())
  twitchId  String     @unique
  username  String     @unique
  accountId Int
  Song      Song[]
  biasIdols BiasIdol[]
}

model Song {
  id           Int       @id @default(autoincrement())
  title        String
  consumedAt   DateTime?
  requestorId  Int
  requestType  String
  displayOrder Int

  requestor Viewer @relation(fields: [requestorId], references: [id])
}

model BiasIdol {
  viewerId Int
  idolId   Int

  viewer Viewer @relation(fields: [viewerId], references: [id])

  @@id([viewerId, idolId])
}
